name: Tests

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x, 19.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
    - name: Install dependencies and run tests in frontend
      run: |
        cd frontend
        npm install
        npm test
    - name: Analyze with SonarCloud
    # You can pin the exact commit or the version.
    # uses: SonarSource/sonarcloud-github-action@v2.2.0
      uses: SonarSource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
      with:
      # Additional arguments for the SonarScanner CLI
        args:
        # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
        # mandatory
          -Dsonar.projectKey=sytw2324
          -Dsonar.organization=SyTW2324_E10
        # Comma-separated paths to directories containing main source files.
        #-Dsonar.sources= # optional, default is project base directory
        # Comma-separated paths to directories containing test source files.
        #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
        # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
        #-Dsonar.verbose= # optional, default is false
        # When you need the analysis to take place in a directory other than the one from which it was launched, default is .
        projectBaseDir: .